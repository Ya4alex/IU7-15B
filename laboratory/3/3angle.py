# Яночкин Александр ИУ7-15Б

"""Написать программу, которая по введенным целочисленным
координатам трех точек на плоскости вычисляет длины сторон
образованного треугольника и длину высоты, проведенной из
наименьшего угла.
Определить, является ли треугольник остроугольным.
Далее вводятся координаты точки. Определить, находится ли
точка внутри треугольника. Если да, то найти расстояние от точки
до наиболее удаленной стороны треугольника или ее
продолжения.
"""
import math as m

EPS = 1e-10

# ввод данных
print('Введите координаты вершин треугольника')
x1, y1 = map(float, input('Введите координаты 1 точки (x y): ').split())
x2, y2 = map(float, input('Введите координаты 2 точки (x y): ').split())
x3, y3 = map(float, input('Введите координаты 3 точки (x y): ').split())

# вычисления сторон
a1 = m.sqrt((x2 - x3) ** 2 + (y2 - y3) ** 2)
a2 = m.sqrt((x1 - x3) ** 2 + (y1 - y3) ** 2)
a3 = m.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2)
# не множество, так как могут быть равные стороны
a_mas = tuple(map(lambda x: 0 if x < EPS else x, sorted((a1, a2, a3))))
# тут можно переписать на 3 переменные
# определение наименьшего угла и определение нужных данных в переменные
if a_mas[0] == a1:
    px1, py1 = x2, y2
    px2, py2 = x3, y3
    tx, ty = x1, y1
elif a_mas[0] == a2:
    px1, py1 = x1, y1
    px2, py2 = x3, y3
    tx, ty = x2, y2
else:
    px1, py1 = x1, y1
    px2, py2 = x2, y2
    tx, ty = x3, y3

# расчет высоты
if all(a_mas):  # для формулы необходимо, чтобы стороны != 0
    # формула расстояния от точки до прямой, заданной двумя точками (p1, p2)
    h_max = abs((py2 - py1) * tx - (px2 - px1) * ty + px2 * py1 - py2 * px1) / a_mas[0]
else:  # иначе максимальная высота равна максимальной стороне
    h_max = a_mas[2]

sa1, sa2, sa3 = a_mas  # определяем наибольшую сторону
is_acute: bool = sa1 ** 2 + sa2 ** 2 > sa3 ** 2  # проверяем по т. Пифагора

# вывод результатов
print(f"Три стороны введенного треугольника:\n\t{sa1:.7g}\n\t{sa2:.7g}\n\t{sa3:.7g}")
print(f"Наибольшая высота:\t{h_max:.7g}")
print(f"Треугольник {'' if is_acute else 'не '}острый.\n")

# ввод точки
x0, y0 = map(int, input('Введите координаты точки (x y): ').split())

# предварительные расчеты для анализа
k1 = (x1 - x0) * (y2 - y1) - (x2 - x1) * (y1 - y0)
k2 = (x2 - x0) * (y3 - y2) - (x3 - x2) * (y2 - y0)
k3 = (x3 - x0) * (y1 - y3) - (x1 - x3) * (y3 - y0)
# если все знаки совпадают => точка принадлежит треугольнику
# буду считать, что если точка лежит на стороне треугольника => точка принадлежит ему
if (k1 >= 0 and k2 >= 0 and k3 >= 0) or (k1 <= 0 and k2 <= 0 and k3 <= 0):
    if all(a_mas):  # проверка на несовпадающие точки
        h0_max = max(  # аналогично нахождению высоты, определяем все 3 расстояния и сравниваем
            abs((y3 - y2) * x0 - (x3 - x2) * y0 + x3 * y2 - y3 * x2) / a1,
            abs((y3 - y1) * x0 - (x3 - x1) * y0 + x3 * y1 - y3 * x1) / a2,
            abs((y1 - y2) * x0 - (x1 - x2) * y0 + x1 * y2 - y1 * x2) / a3,
        )
    else:  # если хотя бы 2 точки совпадают, треугольник "ложиться" на прямую
        h0_max = 0
    print("Точка лежит в треугольнике.")
    print(f"Максимальное расстояние до стороны треугольника: {h0_max:.7g}")
else:
    print("Точка лежит вне треугольника.")
